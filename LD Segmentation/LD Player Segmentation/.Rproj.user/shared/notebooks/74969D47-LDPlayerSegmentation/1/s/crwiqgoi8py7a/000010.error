{"frames":[{"func":"mutate(group_by(ungroup(reframe(group_by(ld_cleaned, Playerid, \n    Currencycode), LT_Active_Days = sum(`Active Days Per Month`), \n    LT_Bet_Count = sum(`Bet Count`), LT_Turnover_USD = sum(`Turnover Usd`), \n    LT_GGR_USD = sum(`Ggr Usd`))), as.factor(Currencycode)),  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.data.frame(group_by(ungroup(reframe(group_by(ld_cleaned, \n    Playerid, Currencycode), LT_Active_Days = sum(`Active Days Per Month`), \n    LT_Bet_Count = sum(`Bet Count`), LT_Turnover_USD = sum(`Turnover Usd`), \n    LT_GGR_USD = sum(`Ggr Usd`))), as.factor(Currencycode)),  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_cols(.data, dplyr_quosures(...), by)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (i in seq_along(dots)) {\n    poke_error_context(dots, i, mask = mask)\n    context_poke(\"column\", old_current_column)\n    new_columns <- mutate_col(dots[[i]], data, mask, new_columns) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_col(dots[[i]], data, mask, new_columns)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dplyr_vec_cast_common(chunks, quo_data$name_auto)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(vec_cast_common(!!!chunks), error = common_handler(name))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_cast_common(!!!chunks)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function () \nvec_default_ptype2(x = x, y = y, x_arg = x_arg, y_arg = y_arg, \n    call = call, `vctrs:::from_dispatch` = `vctrs:::from_dispatch`, \n    `vctrs:::s3_fallback` = `vctrs:::s3_fallback`))()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_default_ptype2(x = x, y = y, x_arg = x_arg, y_arg = y_arg, \n    call = call, `vctrs:::from_dispatch` = `vctrs:::from_dispatch`, \n    `vctrs:::s3_fallback` = `vctrs:::s3_fallback`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withRestarts(stop_incompatible_type(x, y, x_arg = x_arg, y_arg = y_arg, \n    `vctrs:::from_dispatch` = match_from_dispatch(...), call = call), \n    vctrs_restart_ptype2 = function(ptype) {\n        ptype ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withOneRestart(expr, restarts[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doWithOneRestart(return(expr), restart)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_incompatible_type(x, y, x_arg = x_arg, y_arg = y_arg, `vctrs:::from_dispatch` = match_from_dispatch(...), \n    call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_incompatible(x, y, x_arg = x_arg, y_arg = y_arg, details = details, \n    ..., message = message, class = c(class, subclass, \"vctrs_error_incompatible_type\"), \n    call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_vctrs(message, class = c(class, \"vctrs_error_incompatible\"), \n    x = x, y = y, details = details, ..., call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = c(class, \"vctrs_error\"), ..., call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    bullets <- c(glue(\"`{name}` must return compatible vectors across groups.\"), \n        i = cnd_bullet_combine_details(cnd$x, cnd$x_arg), i = cnd_bullet_combine_details(cnd$y,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(bullets, class = \"dplyr:::error_incompatible_combine\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    local_error_context(dots, i = frame[[i_sym]], mask = mask)\n    if (inherits(cnd, \"dplyr:::internal_error\")) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = error_class, parent = parent, call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in mutate(group_by(ungroup(reframe(group_by(ld_cleaned, Playerid,  : \n  \n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;255m\u001B[33m!\u001B[38;5;255m `LT_Active_Days_scale` must return compatible vectors across groups.\n\u001B[36mi\u001B[38;5;255m Result of type <dw_transformer> for group 1: `as.factor(Currencycode) = CNY`.\n\u001B[36mi\u001B[38;5;255m Result of type <dw_transformer> for group 2: `as.factor(Currencycode) = IDR`.\u001B[39m\n"}