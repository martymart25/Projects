banker_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = banker_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.45843) +
labs(x = "Average Wager USD", y = "Win Rate", title = "Banker Average Wager USD vs. Win Rate")
theme_bw()
banker_scatterplot
banker_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = banker_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.45843) +
labs(x = "Average Wager USD",
y = "Win Rate",
title = "Banker Average Wager USD vs. Win Rate")+
theme_bw()
banker_scatterplot
banker_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = banker_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.45843) +
labs(x = "Average Wager USD",
y = "Win %",
title = "Banker Average Wager USD vs. Win%")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent())
banker_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = banker_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.45843) +
labs(x = "Average Wager USD",
y = "Win %",
title = "Banker Average Wager USD vs. Win%")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
)
banker_scatterplot
banker_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = banker_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.45843, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Banker Average Wager USD vs. Win%")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
)
banker_scatterplot
banker_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = banker_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.45843, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Banker Average Wager USD vs. Win%")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
banker_scatterplot
banker_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = banker_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.45843, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Banker Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold")))
banker_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = banker_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.45843, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Banker Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
grid.arrange(player_scatterplot,banker_scatterplot,ncol = 2)
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold")) |>
ggplotly()
library(plotly)
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold")) |>
ggplotly()
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold")) |>
ggplotly(player_scatterplot)
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct)) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
ggplotly(player_scatterplot)
View(df_filtered)
View(df_filtered)
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct,
text = paste("PlayerID:",playerid,
"Average Wager USD:",avg_wager,
"Win %:",player_win_pct))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
ggplotly(player_scatterplot)
ggplotly(player_scatterplot,tooltip = "text") |>
config(displayModeBar)
ggplotly(player_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct,
text = paste("PlayerID:",playerid,
"\nAverage Wager USD:",avg_wager,
"\nWin %:",player_win_pct))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
ggplotly(player_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct,
text = paste("PlayerID:",playerid,
"\nAverage Wager USD:",scales::dollar(avg_wager),
"\nWin %:",scales::percent(player_win_pct)))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
ggplotly(player_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
?scales::percent
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct,
text = paste("PlayerID:",playerid,
"\nAverage Wager USD:",scales::dollar(avg_wager,accuracy = "0.0L"),
"\nWin %:",scales::percent(player_win_pct,accuracy = "0.0L")))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
ggplotly(player_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct,
text = paste("PlayerID:",playerid,
"\nAverage Wager USD:",scales::dollar(avg_wager,accuracy = 0.0L),
"\nWin %:",scales::percent(player_win_pct,accuracy = 0.0L)))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
ggplotly(player_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
?scales::percent
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct,
text = paste("PlayerID:",playerid,
"\nAverage Wager USD:",scales::dollar(avg_wager),
"\nWin %:",scales::percent(player_win_pct,accuracy = 0.1)))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
player_scatterplot
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct,
text = paste("PlayerID:",playerid,
"\nAverage Wager USD:",scales::dollar(avg_wager),
"\nWin %:",scales::percent(player_win_pct,accuracy = 0.1)))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
ggplotly(player_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct,
text = paste("PlayerID:",playerid,
"\nAverage Wager USD:",scales::dollar(avg_wager,accuracy = 0.01),
"\nWin %:",scales::percent(player_win_pct,accuracy = 0.01)))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
ggplotly(player_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
player_scatterplot<- ggplotly(player_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
grid.arrange(player_scatterplot,banker_scatterplot,ncol = 2)
library(odbc)
library(DBI)
library(keyring)
library(dplyr)
library(ggplot2)
library(DBI)
library(plotly)
# con <- dbConnect(odbc(), Driver = "SQL Server Native Client 11.0",
#                  Server = "172.24.84.7", UID = key_get("db_user"), PWD = key_get("db_pass"))
#
# df <- dbGetQuery(con,"
#         SELECT
#         dp.id playerid
#         ,td.BetCode
#         ,dc.Code CurrencyCode
#         ,COUNT(DISTINCT td.BetRecID) bet_count
#         ,COUNT(distinct(case when td.BetResult = 'W' then td.BetRecID end)) win_bet_count
#         ,avg(td.BetAmt/fx.Rate) avg_wager
#         ,sum(td.BetAmt/fx.Rate) turnover_usd
#         ,sum((WinAmt*-1)/fx.Rate) ggr_usd
#         FROM MLD.dbo.UserBetHist td (NOLOCK)
#         INNER JOIN MLD.dbo.Tables tbl (NOLOCK) on td.TableNo = tbl.TableNumber
#         INNER JOIN DWH.WH.DimPlayer dp (NOLOCK) on td.UserName = cast(dp.id as varchar)
#         INNER JOIN DWH.WH.DimCurrency dc with (NOLOCK) on dp.CurrencyId = dc.Id
#         --INNER JOIN DWH.WH.DimTime dt WITH (NOLOCK) ON cast(convert(varchar, BetDate, 112) + FORMAT(BetDate,'HH') as int) = dt.Id
#         LEFT JOIN DWH.WH.FactExchangeRates fx WITH (NOLOCK) ON cast(convert(varchar, BetDate, 112) + '00' as int) = fx.TimeId and dp.CurrencyId  = fx.CurrencyId
#         where 1=1
#         and dp.BrandId = 2
#         and dp.IsInternalAccount = 0
#         and dp.RiskLevelName not in ('Test','Affiliate')
#         and tbl.Studio IN ('Euro','VIVO','Std1')
#         and td.GameType = 'Ba' --Baccarat only
#         and td.BetDate >= '2021-01-01'
#         and td.BetDate < '2023-05-01'
#         and td.BetCode in ('BaBank','BaDeal')
#         GROUP BY
#         dp.id
#         ,td.BetCode
# ")
save(df,file = "Bacarrat.RData")
df_agg <-df |>
group_by(playerid) |>
reframe(avg_wager = sum(turnover_usd,na.rm = T)/sum(bet_count,na.rm = T),
bet_count = sum(bet_count,na.rm = T),
banker_win_count = sum(ifelse(BetCode == "BaBank",win_bet_count,0),na.rm = T),
player_win_count = sum(ifelse(BetCode == "BaDeal",win_bet_count,0),na.rm = T),
turnover_usd = sum(turnover_usd,na.rm = T),
ggr_usd = sum(ggr_usd,na.rm = T),
banker_win_pct = as.numeric(banker_win_count/bet_count),
player_win_pct = as.numeric(player_win_count/bet_count),
hold_pct = as.numeric(ggr_usd/turnover_usd)
)
df_filtered <- df_agg |>
filter(bet_count > 5)
cor(df_filtered$avg_wager,df_filtered$banker_win_pct)
cor(df_filtered$avg_wager,df_filtered$player_win_pct)
cor(df_filtered$turnover_usd,df_filtered$banker_win_pct)
cor(df_filtered$turnover_usd,df_filtered$player_win_pct)
banker_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = banker_win_pct,
text = paste("PlayerID:",playerid,
"\nAverage Wager USD:",scales::dollar(avg_wager,accuracy = 0.01),
"\nWin %:",scales::percent(player_win_pct,accuracy = 0.01)))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.45843, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Banker Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
banker_scatterplot<- ggplotly(banker_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
player_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = player_win_pct,
text = paste("PlayerID:",playerid,
"\nAverage Wager USD:",scales::dollar(avg_wager,accuracy = 0.01),
"\nWin %:",scales::percent(player_win_pct,accuracy = 0.01)))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.44615, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Player Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
player_scatterplot<- ggplotly(player_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
grid.arrange(player_scatterplot,banker_scatterplot,ncol = 2)
player_scatterplot
subplot(player_scatterplot,banker_scatterplot,ncol = 2)
subplot(player_scatterplot,banker_scatterplot)
banker_scatterplot
banker_scatterplot <- ggplot(df_filtered,aes(x = avg_wager, y = banker_win_pct,
text = paste("PlayerID:",playerid,
"\nAverage Wager USD:",scales::dollar(avg_wager,accuracy = 0.01),
"\nWin %:",scales::percent(banker_win_pct,accuracy = 0.01)))) +
geom_point(color = "blue") +
geom_hline(yintercept = 0.45843, color= "red") +
labs(x = "Average Wager USD",
y = "Win %",
title = "Banker Average Wager USD vs. Win %")+
scale_x_continuous(label = scales::dollar)+
scale_y_continuous(label = scales::percent)+
theme_bw() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"))
banker_scatterplot<- ggplotly(banker_scatterplot,tooltip = "text") |>
config(displayModeBar = FALSE)
banker_scatterplot
subplot(player_scatterplot,banker_scatterplot,nrows = 1)
knitr::opts_chunk$set(echo = FALSE)
library(odbc)
library(DBI)
library(keyring)
library(dplyr)
library(ggplot2)
library(DBI)
library(plotly)
library(tidyr)
options(repr.plot.width = 3, repr.plot.height =3)
load("Bacarrat.RData")
df_agg <-df |>
group_by(playerid,username,CurrencyCode) |>
reframe(avg_wager = sum(turnover_usd,na.rm = T)/sum(bet_count,na.rm = T),
bet_count = sum(bet_count,na.rm = T),
banker_win_count = sum(ifelse(BetCode == "BaBank",win_bet_count,0),na.rm = T),
player_win_count = sum(ifelse(BetCode == "BaDeal",win_bet_count,0),na.rm = T),
banker_ggr_usd = sum(ifelse(BetCode == "BaBank",ggr_usd,0),na.rm = T),
player_ggr_usd = sum(ifelse(BetCode == "BaDeal",ggr_usd,0),na.rm = T),
banker_turnover_usd = sum(ifelse(BetCode == "BaBank",turnover_usd,0),na.rm = T),
player_turnover_usd = sum(ifelse(BetCode == "BaDeal",turnover_usd,0),na.rm = T),
max_wager_usd = max(max_wager,na.rm = T),
turnover_usd = sum(turnover_usd,na.rm = T),
ggr_usd = sum(ggr_usd,na.rm = T),
banker_win_pct = as.numeric(banker_win_count/bet_count),
player_win_pct = as.numeric(player_win_count/bet_count),
banker_hold_pct = as.numeric(coalesce(banker_ggr_usd/banker_turnover_usd,0)),
player_hold_pct = as.numeric(coalesce(player_ggr_usd/player_turnover_usd,0))) |>
ungroup()
df_filtered <- df_agg |>
filter(bet_count > 5)
pct <- function(x) scales::percent(x,accuracy=0.01)
library(tidyr)
library(dplyr)
df <- read.csv("C:/Users/raymart.biasbas/Documents/Proyekto/AB Testing Data/cn_names.csv")
View(df)
View(df)
df <- read.csv("C:/Users/raymart.biasbas/Documents/Proyekto/AB Testing Data/cn_names.csv",
encoding = 'UTF-8')
df
View(df)
?read.csv
df <- read.csv("C:/Users/raymart.biasbas/Documents/Proyekto/AB Testing Data/cn_names.csv",
fileEncoding = 'UTF-8',encoding = 'UTF-8')
df <- read.csv("C:/Users/raymart.biasbas/Documents/Proyekto/AB Testing Data/cn_names.csv",,
header = TRUE,
encoding = 'UTF-8')
View(df)
df <- read.csv("C:/Users/raymart.biasbas/Documents/Proyekto/AB Testing Data/categories.csv",,
header = TRUE,
encoding = 'UTF-8')
df
View(df)
colnames(df)[,1]
colnames(df)[1]
colnames(df)[1] <- "Category"
df
View(df)
df_pivot <- df |>
pivot_longer(cols = c('ID','CN','TH','VN','KR','JP'),
names_to = "language",
values_to = "name")
df_pivot
View(df_pivot)
write.csv(df,categories.csv,row.names = F,fileEncoding = 'UTF-8')
write.csv(df,file="categories.csv",row.names = F,fileEncoding = 'UTF-8')
library(readr)
install.packages("readr")
library(readr)
write_excel_csv(df,file = "categories.csv")
write_excel_csv(df_pivot
,file = "categories.csv")
library(dplyr)
library(tidyr)
df <- read.csv("C:/Users/raymart.biasbas/Documents/Proyekto/AB Testing Data/categories.csv",,
header = TRUE,
encoding = 'UTF-8')
colnames(df)[1] <- "Category"
df_pivot <- df |>
pivot_longer(cols = c('ID','CN','TH','VN','KR','JP'),
names_to = "Language",
values_to = "Name")
install.packages("readr")
library(readr)
write_excel_csv(df_pivot
,file = "categories.csv")
install.packages("readr")
library(dplyr)
library(tidyr)
df <- read.csv("C:/Users/raymart.biasbas/Documents/Proyekto/AB Testing Data/categories.csv",,
header = TRUE,
encoding = 'UTF-8')
colnames(df)[1] <- "Category"
df_pivot <- df |>
pivot_longer(cols = c('ID','CN','TH','VN','KR','JP'),
names_to = "Language",
values_to = "Name")
library(readr)
write_excel_csv(df_pivot
,file = "categories.csv")
View(df_pivot)
library(odbc)
library(DBI)
library(keyring)
library(dplyr)
library(ggplot2)
library(DBI)
library(plotly)
con <- dbConnect(odbc(), Driver = "SQL Server Native Client 11.0",
Server = "172.24.84.7", UID = key_get("db_user"), PWD = key_get("db_pass"))
